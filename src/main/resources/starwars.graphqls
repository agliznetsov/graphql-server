schema {
    query: Query
    mutation: Mutation
}

type Query {
    characters(request: FindCharactersRequest) : [Character]

    character(id : ID!) : Character
}

type Mutation {
    addCharacter(request: ChangeCharacterRequest): Character
    removeCharacter(characterId: ID!): Void
    changeCharacter(request: ChangeCharacterRequest): Character
    
    addFriend(characterId: ID!, friedId: ID!): Void
    removeFriend(characterId: ID!, friedId: ID!): Void
}

type Void {
}

input FindCharactersRequest {
    episode: Episode
    characterType: CharacterType
    limit: Int
    offset: Int
}

input ChangeCharacterRequest {
    # The id of the character.
    id: ID!
    # The name of the character.
    name: String
    # Which movies they appear in.
    appearsIn: [Episode]
    # The home planet of the character, or null if unknown.
    homePlanet: String
}

enum CharacterType {
    HUMAN,
    DROID
}

# One of the films in the Star Wars Trilogy
enum Episode {
    # Released in 1977
    NEWHOPE
    # Released in 1980.
    EMPIRE
    # Released in 1983.
    JEDI
}

type  Character {
    # The id of the character.
    id: ID!
    type: CharacterType!
    # The name of the character.
    name: String!
    # The friends of the character, or an empty list if they have none.
    friends(offset: Int, limit: Int): [Character]
    # Which movies they appear in.
    appearsIn: [Episode!]!
    # The home planet of the character, or null if unknown.
    homePlanet: String
}
